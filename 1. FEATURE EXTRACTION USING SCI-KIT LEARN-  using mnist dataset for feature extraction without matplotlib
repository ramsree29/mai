from sklearn.datasets import fetch_openml
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import pandas as pd

# Load the MNIST dataset (handwritten digits)
mnist = fetch_openml('mnist_784', version=1, as_frame=False)
X, y = mnist['data'], mnist['target']

print("Original shape of X:", X.shape)  # (70000, 784)

# Step 1: Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 2: Apply PCA to reduce to 20 components
pca = PCA(n_components=20)
X_pca = pca.fit_transform(X_scaled)

print("Shape after PCA:", X_pca.shape)  # (70000, 20)

# Step 3: Print the first 5 rows of extracted features
df_features = pd.DataFrame(X_pca, columns=[f'PC{i+1}' for i in range(20)])
print("\nExtracted Features (first 5 rows):")
print(df_features.head())
