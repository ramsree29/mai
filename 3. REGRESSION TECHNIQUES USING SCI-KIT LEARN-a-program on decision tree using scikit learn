import numpy as np
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeRegressor

# Create sample data
X = np.sort(5 * np.random.rand(80, 1), axis=0)
y = np.sin(X).ravel()

# Add some noise
y[::5] += 0.5 * (0.5 - np.random.rand(16))

# Fit regression model
model = DecisionTreeRegressor(max_depth=3)
model.fit(X, y)

# Predict
X_test = np.arange(0.0, 5.0, 0.01)[:, np.newaxis]
y_pred = model.predict(X_test)

# Plot the results
plt.figure(figsize=(8, 5))
plt.scatter(X, y, s=20, edgecolor="k", c="darkorange", label="Data")
plt.plot(X_test, y_pred, color="navy", lw=2, label="Decision Tree Prediction")
plt.xlabel("X")
plt.ylabel("y")
plt.title("Decision Tree Regression")
plt.legend()
plt.grid(True)
plt.show()
